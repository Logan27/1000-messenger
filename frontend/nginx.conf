# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=strict:10m rate=1r/s;

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Client settings
    client_max_body_size 12M;  # Allow image uploads (10MB + overhead)
    client_body_buffer_size 128k;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Connection settings
    keepalive_timeout 65;
    keepalive_requests 100;
    send_timeout 30s;

    # Buffer settings
    large_client_header_buffers 4 16k;

    # Logging (using nginx default combined format with request_time)
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss application/json 
               application/x-javascript text/x-js application/vnd.ms-fontobject 
               application/x-font-ttf font/opentype image/svg+xml;
    gzip_disable "msie6";
    gzip_buffers 16 8k;

    # Security headers (applied to all responses)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy - adjust based on your needs
    # This is a baseline policy; customize for your specific requirements
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' ws: wss: http: https:; frame-ancestors 'self';" always;
    
    # HSTS (uncomment when using HTTPS)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Health check endpoint
    location /health {
        access_log off;
        limit_req zone=strict burst=5 nodelay;
        add_header Content-Type text/plain;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        return 200 "healthy\n";
    }

    # Runtime configuration endpoint
    location = /config.js {
        limit_req zone=general burst=5 nodelay;
        add_header Content-Type application/javascript;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header Pragma "no-cache";
        expires 0;
        try_files $uri =404;
    }

    # Don't cache index.html
    location = /index.html {
        limit_req zone=general burst=10 nodelay;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header Pragma "no-cache";
        expires 0;
        try_files $uri =404;
    }

    # Cache static assets aggressively
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif|map)$ {
        limit_req zone=general burst=20 nodelay;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Enable CORS for fonts and other assets if needed
        # add_header Access-Control-Allow-Origin "*";
        
        # Return 404 if file doesn't exist instead of redirecting to index.html
        try_files $uri =404;
    }

    # Manifest and service worker files
    location ~* \.(webmanifest|json)$ {
        limit_req zone=general burst=10 nodelay;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        try_files $uri =404;
    }

    # Robots and sitemap
    location ~* ^/(robots\.txt|sitemap\.xml)$ {
        access_log off;
        limit_req zone=general burst=5 nodelay;
        try_files $uri =404;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        limit_req zone=general burst=5 nodelay;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        try_files $uri =204;
    }

    # SPA routing - must be last
    # All other paths serve index.html for client-side routing
    location / {
        limit_req zone=general burst=10 nodelay;
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup and source files
    location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
