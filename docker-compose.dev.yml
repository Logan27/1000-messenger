services:
  # PostgreSQL Database 15
  postgres:
    image: postgres:15-alpine
    container_name: chat-postgres-dev
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatpass}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatuser -d chatapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chat-dev-network

  # Redis 7
  redis:
    image: redis:7-alpine
    container_name: chat-redis-dev
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispass}
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD:-redispass}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chat-dev-network

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: chat-minio-dev
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_dev_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - chat-dev-network

  # MinIO Client - Create bucket automatically
  minio-init:
    image: minio/mc:latest
    container_name: chat-minio-init-dev
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      sleep 5;
      echo 'Configuring MinIO client...';
      /usr/bin/mc alias set chatminio http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin};
      echo 'Creating bucket if it does not exist...';
      /usr/bin/mc mb chatminio/chat-images --ignore-existing;
      echo 'Setting bucket policy to public download...';
      /usr/bin/mc anonymous set download chatminio/chat-images;
      echo 'MinIO setup complete!';
      exit 0;
      "
    networks:
      - chat-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  chat-dev-network:
    driver: bridge
