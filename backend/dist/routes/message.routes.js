"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageRoutes = void 0;
const express_1 = require("express");
const message_controller_1 = require("../controllers/message.controller");
const message_service_1 = require("../services/message.service");
const message_repository_1 = require("../repositories/message.repository");
const chat_repository_1 = require("../repositories/chat.repository");
const user_repository_1 = require("../repositories/user.repository");
const auth_middleware_1 = require("../middleware/auth.middleware");
const validation_middleware_1 = require("../middleware/validation.middleware");
const rate_limit_middleware_1 = require("../middleware/rate-limit.middleware");
const router = (0, express_1.Router)();
exports.messageRoutes = router;
const userRepo = new user_repository_1.UserRepository();
const chatRepo = new chat_repository_1.ChatRepository();
const messageRepo = new message_repository_1.MessageRepository();
const messageDeliveryQueue = {};
const socketManager = {};
const messageService = new message_service_1.MessageService(messageRepo, chatRepo, messageDeliveryQueue, socketManager);
const messageController = new message_controller_1.MessageController(messageService);
router.use(auth_middleware_1.authMiddleware.authenticate);
router.post('/:chatId', rate_limit_middleware_1.messageRateLimit, (0, validation_middleware_1.validate)(validation_middleware_1.messageSchema), messageController.sendMessage);
router.get('/:chatId', messageController.getMessages);
router.put('/:messageId', messageController.editMessage);
router.delete('/:messageId', messageController.deleteMessage);
router.post('/:messageId/read', messageController.markAsRead);
router.post('/:messageId/reactions', messageController.addReaction);
router.delete('/reactions/:reactionId', messageController.removeReaction);
//# sourceMappingURL=message.routes.js.map