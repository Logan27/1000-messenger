"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contactRoutes = void 0;
const express_1 = require("express");
const contact_controller_1 = require("../controllers/contact.controller");
const contact_service_1 = require("../services/contact.service");
const contact_repository_1 = require("../repositories/contact.repository");
const user_repository_1 = require("../repositories/user.repository");
const auth_middleware_1 = require("../middleware/auth.middleware");
const auth_service_1 = require("../services/auth.service");
const session_service_1 = require("../services/session.service");
const router = (0, express_1.Router)();
exports.contactRoutes = router;
const userRepo = new user_repository_1.UserRepository();
const contactRepo = new contact_repository_1.ContactRepository();
const sessionService = new session_service_1.SessionService();
const authService = new auth_service_1.AuthService(userRepo, sessionService);
const contactService = new contact_service_1.ContactService(contactRepo, userRepo);
const contactController = new contact_controller_1.ContactController(contactService);
const authMiddleware = new auth_middleware_1.AuthMiddleware(authService);
router.use(authMiddleware.authenticate);
router.get('/', contactController.getContacts);
router.get('/pending', contactController.getPendingRequests);
router.post('/request', contactController.sendRequest);
router.post('/:requestId/accept', contactController.acceptRequest);
router.post('/:requestId/reject', contactController.rejectRequest);
router.delete('/:contactId', contactController.removeContact);
router.post('/:contactId/block', contactController.blockContact);
router.delete('/:contactId/block', contactController.unblockContact);
//# sourceMappingURL=contact.routes.js.map